on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

env:
  WSPDATA: 'white spaces.'

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set output
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
      - name: Check output
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        run: |
          echo $RELEASE_VERSION
          echo ${{ steps.vars.outputs.tag }}
          echo "[${{ env.WSPDATA }}]"
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          zip --junk-paths TestTest${{ steps.vars.outputs.tag }}.zap README.md
      - name: get zap file name
        id: zapFileName
        run: |
          echo "filename=`ls *.zap`" >> $GITHUB_OUTPUT
      - name: echo zap file name
        run: echo "filename[${{ steps.zapFileName.outputs.filename }}]"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          release_name: release ${{ steps.vars.outputs.tag }} title test
          draft: true
          prerelease: true
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: TestTest${{ steps.vars.outputs.tag }}.zap
          asset_name: TestTest${{ steps.vars.outputs.tag }}.zap
          asset_content_type: application/zip
